# A task which is optimized for running the generated image.
# It takes care of starting docker and tearing down after running the command.
# Furthermore, caching is taken care of as well.
platform: linux
#
inputs:
  - name: some-resource
#inputs: [ ]#((inputs))
#outputs: [ ] #((outputs))
#
caches:
  - path: /cache

# TODO -as- 20250929 make version when not using docker.
run:
  path: bash
  args:
    - -ec
    - |
      start_docker
      await_docker
      trap stop_docker EXIT
      
      docker_load_cache
      
      START_TIME=$(date +%s)
      
      # Execute the users command here.
      ((script))
      
      USED_IMAGES="$(docker events --since "$START_TIME" --until "$(date +%s)" --format '{{json .}}' | \
        jq -r 'select(.Type=="container") | .Actor.Attributes.image' | sort | uniq)"

      if [[ -n "$USED_IMAGES" ]]; then
        docker_save_cache $USED_IMAGES
      else
        # Cleanup if none of the previously cached images was used.
        # Might not be the desired behaviour in every case but sticking with this for now. 
        rm -rf $DOCKER_CACHE_DIR
      fi
